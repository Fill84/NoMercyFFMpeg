name: Validate Workflow Execution

on:
  workflow_dispatch:
#   workflow_run:
#     workflows:
#       - Build
#       - Test
#       - Release
#     types:
#       - completed

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Check workflow status
        run: |
          echo "Checking workflow: ${{ github.event.workflow_run.name }}"
          echo "Status: ${{ github.event.workflow_run.conclusion }}"
          
          if [ "${{ github.event.workflow_run.conclusion }}" != "success" ]; then
            echo "::error::Workflow ${{ github.event.workflow_run.name }} failed"
            echo "Check logs at: ${{ github.event.workflow_run.html_url }}"
            exit 1
          fi

      - name: Verify artifact availability
        if: github.event.workflow_run.name == 'Build'
        run: |
          # Check if ffmpeg-binaries artifact exists
          ARTIFACTS_URL="${{ github.event.workflow_run.artifacts_url }}"
          ARTIFACTS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $ARTIFACTS_URL)
          
          if ! echo "$ARTIFACTS" | grep -q "ffmpeg-binaries"; then
            echo "::error::ffmpeg-binaries artifact not found"
            exit 1
          fi

      - name: Verify release availability
        if: github.event.workflow_run.name == 'Release'
        run: |
          # Get latest release
          RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/latest"
          RELEASE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $RELEASE_URL)
          
          # Check if release exists
          if [ "$(echo $RELEASE | jq -r '.message')" == "Not Found" ]; then
            echo "::error::Latest release not found"
            exit 1
          fi

          # Check if all assets are present
          ASSETS=$(echo $RELEASE | jq -r '.assets[].name')
          REQUIRED_ASSETS=(
            "ffmpeg-linux-x86_64-7.1"
            "ffmpeg-linux-aarch64-7.1"
            "ffmpeg-windows-x86_64-7.1"
            "ffmpeg-darwin-x86_64-7.1"
            "ffmpeg-darwin-arm64-7.1"
          )

          for asset in "${REQUIRED_ASSETS[@]}"; do
            if ! echo "$ASSETS" | grep -q "$asset"; then
              echo "::error::Missing asset: $asset"
              exit 1
            fi
          done
          
          echo "All release assets verified successfully"

      - name: Send success notification
        if: success()
        run: |
          echo "::notice::All workflows completed successfully!"
          echo "‚úÖ Build workflow status: ${{ github.event.workflow_run.conclusion }}"
          
          if [ "${{ github.event.workflow_run.name }}" == "Release" ]; then
            RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/latest"
            RELEASE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $RELEASE_URL)
            VERSION=$(echo $RELEASE | jq -r '.tag_name')
            echo "‚úÖ Release version: $VERSION published successfully"
            echo "üîó Release URL: $(echo $RELEASE | jq -r '.html_url')"
          fi

      - name: Send failure notification
        if: failure()
        run: |
          echo "::error::Workflow validation failed"
          echo "‚ùå Failed workflow: ${{ github.event.workflow_run.name }}"
          echo "‚ùå Status: ${{ github.event.workflow_run.conclusion }}"
          echo "üîó Logs: ${{ github.event.workflow_run.html_url }}"
