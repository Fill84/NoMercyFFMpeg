name: Test

on:
  workflow_run:
    workflows:
      - Build
    types:
      - completed
  workflow_dispatch:
    inputs:
      force_test:
        description: "Force test of all images"
        required: true
        type: boolean
        default: true

jobs:
  platform-tests-unix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x86_64, arm64]
    continue-on-error: true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: downloads/

      - name: Unpack ffmpeg binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ] && [ "${{ matrix.arch }}" == "x86_64" ]; then
            FILE_NAME="downloads/ffmpeg-7.1-linux-${{ matrix.arch }}.tar.gz"
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ] && [ "${{ matrix.arch }}" == "arm64" ]; then
            FILE_NAME="downloads/ffmpeg-7.1-linux-aarch64.tar.gz"
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            FILE_NAME="downloads/ffmpeg-7.1-darwin-${{ matrix.arch }}.tar.gz"
          fi

          tar -xvf $FILE_NAME

          chmod +x ${{ github.workspace }}/ffmpeg ${{ github.workspace }}/ffprobe
          
      - name: Run Tests
        id: tests
        shell: bash
        run: |
          chmod +x ${{ github.workspace }}/tests/tests.sh
          ${{ github.workspace }}/tests/tests.sh "${{ github.workspace }}"
          exit 0

  platform-tests-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        arch: [x86_64] #, arm64]
    continue-on-error: true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: downloads/

      - name: Unpack ffmpeg binary
        shell: bash
        run: |
          FILE_NAME="downloads/ffmpeg-7.1-windows-${{ matrix.arch }}.zip"
          unzip -o $FILE_NAME

      - name: Run Tests
        id: tests
        shell: pwsh
        run: |
          ${{ github.workspace }}\tests\tests.ps1 "${{ github.workspace }}"
          exit 0

  prepare-release:
    runs-on: ubuntu-latest
    needs: [platform-tests-unix, platform-tests-windows]
    continue-on-error: false
    if: success()
    steps:    
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: downloads/

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: downloads/