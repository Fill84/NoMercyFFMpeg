name: Parallel FFmpeg Test

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      force_test:
        description: 'Force test of all images'
        required: true
        type: boolean
        default: true

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-check.outputs.version }}      

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check release version
        id: version-check
        run: |
          git config --global --add safe.directory ${{ github.workspace }}
          # Get the latest version tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          
          echo "Latest tag: $LATEST_TAG$"
          echo "version=$LATEST_TAG" >> $GITHUB_OUTPUT

  linux-ffmpeg-test:
    needs: check-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download linux release
        id: test-linux
        run: |
          wget https://github.com/NoMercy-Entertainment/NoMercyFFMpeg/releases/download/${{ needs.check-release.outputs.version }}/ffmpeg-linux-7.1-${{ needs.check-release.outputs.version }}.tar.gz
          tar -xvf ffmpeg-linux-7.1-${{ needs.check-release.outputs.version }}.tar.gz
          chmod +x ./ffmpeg ./tests/ffmpeg-tests.sh
          ./tests/ffmpeg-tests.sh

      # - name: Test version
      #   run: ./ffmpeg -version
      #   shell: bash

      # - name: Test libx264
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx264 ./test_files/test_h264.mp4 || true
      #   shell: bash

      # - name: Test libx265
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx265 ./test_files/test_h265.mp4 || true
      #   shell: bash

      # - name: Test libvpx
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libvpx-vp9 ./test_files/test_vp9.webm || true
      #   shell: bash

      # - name: Test libopus
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libopus ./test_files/test_opus.opus || true
      #   shell: bash

      # - name: Test libmp3lame
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libmp3lame ./test_files/test_mp3.mp3 || true
      #   shell: bash

      # - name: Test libfdk_aac
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libfdk_aac ./test_files/test_aac.m4a || true
      #   shell: bash

      # - name: Test libvorbis
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libvorbis ./test_files/test_vorbis.ogg || true
      #   shell: bash
      
      # - name: Test libwebp
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libwebp ./test_files/test.webp || true
      #   shell: bash

      # - name: Test libopenjpeg
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libopenjpeg ./test_files/test.jp2 || true
      #   shell: bash

      # - name: Test libass
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -vf ass=test_files/test.ass ./test_files/test_ass.mp4 || true
      #   shell: bash

      # - name: Test libfribidi
      #   run: ./ffmpeg -filters 2>&1 | grep fribidi || true
      #   shell: bash

      # - name: Test libvmaf
      #   run: ./ffmpeg -h 2>&1 | grep vmaf || true
      #   shell: bash
        
      # - name: Test libbluray
      #   run: ./ffmpeg -h 2>&1 | grep bluray || true
      #   shell: bash
        
      # - name: Test libcdio
      #   run: ./ffmpeg -h 2>&1 | grep cdio || true
      #   shell: bash
        
      # - name: Test libsrt 
      #   run: ./ffmpeg -h 2>&1 | grep srt || true
      #   shell: bash

      # - name: Test libxml2
      #   run: ./ffmpeg -h 2>&1 | grep xml || true
      #   shell: bash

      # - name: Test libdav1d
      #   run: ./ffmpeg -h decoder 2>&1 | grep dav1d || true
      #   shell: bash

      # - name: Test rav1e
      #   run: ./ffmpeg -h encoder 2>&1 | grep rav1e || true
      #   shell: bash

  windows-ffmpeg-test:
    needs: check-release
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download windows release
        id: test-windows
        run: |
          $client = new-object System.Net.WebClient
          $client.DownloadFile("https://github.com/NoMercy-Entertainment/NoMercyFFMpeg/releases/download/${{ needs.check-release.outputs.version }}/ffmpeg-windows-7.1-${{ needs.check-release.outputs.version }}.tar.gz", "ffmpeg-windows-7.1-${{ needs.check-release.outputs.version }}.tar.gz")        
          tar -xvf ffmpeg-windows-7.1-${{ needs.check-release.outputs.version }}.tar.gz
          ./tests/ffmpeg-tests.ps1

      # - name: Test version
      #   run: ./ffmpeg.exe -version
      #   shell: bash

      # - name: Test libx264
      #   run: ./ffmpeg.exe -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx264 ./test_files/test_h264.mp4 || true
      #   shell: bash

      # - name: Test libx265
      #   run: ./ffmpeg.exe -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx265 ./test_files/test_h265.mp4 || true
      #   shell: bash

      # - name: Test libvpx
      #   run: ./ffmpeg.exe -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libvpx-vp9 ./test_files/test_vp9.webm || true
      #   shell: bash

      # - name: Test libopus
      #   run: ./ffmpeg.exe -y -f lavfi -i anullsrc=duration=1 -c:a libopus ./test_files/test_opus.opus || true
      #   shell: bash

      # - name: Test libmp3lame
      #   run: ./ffmpeg.exe -y -f lavfi -i anullsrc=duration=1 -c:a libmp3lame ./test_files/test_mp3.mp3 || true
      #   shell: bash

      # - name: Test libfdk_aac
      #   run: ./ffmpeg.exe -y -f lavfi -i anullsrc=duration=1 -c:a libfdk_aac ./test_files/test_aac.m4a || true
      #   shell: bash

      # - name: Test libvorbis
      #   run: ./ffmpeg.exe -y -f lavfi -i anullsrc=duration=1 -c:a libvorbis ./test_files/test_vorbis.ogg || true
      #   shell: bash
      
      # - name: Test libwebp
      #   run: ./ffmpeg.exe -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libwebp ./test_files/test.webp || true
      #   shell: bash

      # - name: Test libopenjpeg
      #   run: ./ffmpeg.exe -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libopenjpeg ./test_files/test.jp2 || true
      #   shell: bash

      # - name: Test libass
      #   run: ./ffmpeg.exe -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -vf ass=test_files/test.ass ./test_files/test_ass.mp4 || true
      #   shell: bash

      # - name: Test libfribidi
      #   run: ./ffmpeg.exe -filters 2>&1 | grep fribidi || true
      #   shell: bash

      # - name: Test libvmaf
      #   run: ./ffmpeg.exe -h 2>&1 | grep vmaf || true
      #   shell: bash
        
      # - name: Test libbluray
      #   run: ./ffmpeg.exe -h 2>&1 | grep bluray || true
      #   shell: bash
        
      # - name: Test libcdio
      #   run: ./ffmpeg.exe -h 2>&1 | grep cdio || true
      #   shell: bash
        
      # - name: Test libsrt 
      #   run: ./ffmpeg.exe -h 2>&1 | grep srt || true
      #   shell: bash

      # - name: Test libxml2
      #   run: ./ffmpeg.exe -h 2>&1 | grep xml || true
      #   shell: bash

      # - name: Test libdav1d
      #   run: ./ffmpeg.exe -h decoder 2>&1 | grep dav1d || true
      #   shell: bash

      # - name: Test rav1e
      #   run: ./ffmpeg.exe -h encoder 2>&1 | grep rav1e || true
      #   shell: bash

  aarch64-ffmpeg-test:
    needs: check-release
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download aarch64 release
        id: test-aarch64
        run: |
          wget https://github.com/NoMercy-Entertainment/NoMercyFFMpeg/releases/download/${{ needs.check-release.outputs.version }}/ffmpeg-aarch64-7.1-${{ needs.check-release.outputs.version }}.tar.gz
          tar -xvf ffmpeg-aarch64-7.1-${{ needs.check-release.outputs.version }}.tar.gz
          chmod +x ./ffmpeg ./tests/ffmpeg-tests.sh
          ./tests/ffmpeg-tests.sh

      # - name: Test version
      #   run: ./ffmpeg -version
      #   shell: bash

      # - name: Test libx264
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx264 ./test_files/test_h264.mp4 || true
      #   shell: bash

      # - name: Test libx265
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx265 ./test_files/test_h265.mp4 || true
      #   shell: bash

      # - name: Test libvpx
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libvpx-vp9 ./test_files/test_vp9.webm || true
      #   shell: bash

      # - name: Test libopus
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libopus ./test_files/test_opus.opus || true
      #   shell: bash

      # - name: Test libmp3lame
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libmp3lame ./test_files/test_mp3.mp3 || true
      #   shell: bash

      # - name: Test libfdk_aac
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libfdk_aac ./test_files/test_aac.m4a || true
      #   shell: bash

      # - name: Test libvorbis
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libvorbis ./test_files/test_vorbis.ogg || true
      #   shell: bash
      
      # - name: Test libwebp
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libwebp ./test_files/test.webp || true
      #   shell: bash

      # - name: Test libopenjpeg
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libopenjpeg ./test_files/test.jp2 || true
      #   shell: bash

      # - name: Test libass
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -vf ass=test_files/test.ass ./test_files/test_ass.mp4 || true
      #   shell: bash

      # - name: Test libfribidi
      #   run: ./ffmpeg -filters 2>&1 | grep fribidi || true
      #   shell: bash

      # - name: Test libvmaf
      #   run: ./ffmpeg -h 2>&1 | grep vmaf || true
      #   shell: bash
        
      # - name: Test libbluray
      #   run: ./ffmpeg -h 2>&1 | grep bluray || true
      #   shell: bash
        
      # - name: Test libcdio
      #   run: ./ffmpeg -h 2>&1 | grep cdio || true
      #   shell: bash
        
      # - name: Test libsrt 
      #   run: ./ffmpeg -h 2>&1 | grep srt || true
      #   shell: bash

      # - name: Test libxml2
      #   run: ./ffmpeg -h 2>&1 | grep xml || true
      #   shell: bash

      # - name: Test libdav1d
      #   run: ./ffmpeg -h decoder 2>&1 | grep dav1d || true
      #   shell: bash

      # - name: Test rav1e
      #   run: ./ffmpeg -h encoder 2>&1 | grep rav1e || true
      #   shell: bash

  darwin-x86_64:
    needs: check-release
    runs-on: macos-13

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download aarch64 release
        id: test-darwin-x86_64
        run: |
          wget https://github.com/NoMercy-Entertainment/NoMercyFFMpeg/releases/download/${{ needs.check-release.outputs.version }}/ffmpeg-darwin-x86_64-7.1-${{ needs.check-release.outputs.version }}.tar.gz
          tar -xvf ffmpeg-darwin-x86_64-7.1-${{ needs.check-release.outputs.version }}.tar.gz
          chmod +x ./ffmpeg ./tests/ffmpeg-tests.sh
          ./tests/ffmpeg-tests.sh

      # - name: Test version
      #   run: ./ffmpeg -version
      #   shell: bash

      # - name: Test libx264
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx264 ./test_files/test_h264.mp4 || true
      #   shell: bash

      # - name: Test libx265
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx265 ./test_files/test_h265.mp4 || true
      #   shell: bash

      # - name: Test libvpx
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libvpx-vp9 ./test_files/test_vp9.webm || true
      #   shell: bash

      # - name: Test libopus
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libopus ./test_files/test_opus.opus || true
      #   shell: bash

      # - name: Test libmp3lame
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libmp3lame ./test_files/test_mp3.mp3 || true
      #   shell: bash

      # - name: Test libfdk_aac
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libfdk_aac ./test_files/test_aac.m4a || true
      #   shell: bash

      # - name: Test libvorbis
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libvorbis ./test_files/test_vorbis.ogg || true
      #   shell: bash
      
      # - name: Test libwebp
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libwebp ./test_files/test.webp || true
      #   shell: bash

      # - name: Test libopenjpeg
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libopenjpeg ./test_files/test.jp2 || true
      #   shell: bash

      # - name: Test libass
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -vf ass=test_files/test.ass ./test_files/test_ass.mp4 || true
      #   shell: bash

      # - name: Test libfribidi
      #   run: ./ffmpeg -filters 2>&1 | grep fribidi || true
      #   shell: bash

      # - name: Test libvmaf
      #   run: ./ffmpeg -h 2>&1 | grep vmaf || true
      #   shell: bash
        
      # - name: Test libbluray
      #   run: ./ffmpeg -h 2>&1 | grep bluray || true
      #   shell: bash
        
      # - name: Test libcdio
      #   run: ./ffmpeg -h 2>&1 | grep cdio || true
      #   shell: bash
        
      # - name: Test libsrt 
      #   run: ./ffmpeg -h 2>&1 | grep srt || true
      #   shell: bash

      # - name: Test libxml2
      #   run: ./ffmpeg -h 2>&1 | grep xml || true
      #   shell: bash

      # - name: Test libdav1d
      #   run: ./ffmpeg -h decoder 2>&1 | grep dav1d || true
      #   shell: bash

      # - name: Test rav1e
      #   run: ./ffmpeg -h encoder 2>&1 | grep rav1e || true
      #   shell: bash

  darwin-arm64:
    needs: check-release
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download aarch64 release
        id: test-darwin-arm64
        run: |
          wget https://github.com/NoMercy-Entertainment/NoMercyFFMpeg/releases/download/${{ needs.check-release.outputs.version }}/ffmpeg-darwin-arm64-7.1-${{ needs.check-release.outputs.version }}.tar.gz
          tar -xvf ffmpeg-darwin-arm64-7.1-${{ needs.check-release.outputs.version }}.tar.gz
          chmod +x ./ffmpeg ./tests/ffmpeg-tests.sh
          ./tests/ffmpeg-tests.sh

      # - name: Test version
      #   run: ./ffmpeg -version
      #   shell: bash

      # - name: Test libx264
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx264 ./test_files/test_h264.mp4 || true
      #   shell: bash

      # - name: Test libx265
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libx265 ./test_files/test_h265.mp4 || true
      #   shell: bash

      # - name: Test libvpx
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -c:v libvpx-vp9 ./test_files/test_vp9.webm || true
      #   shell: bash

      # - name: Test libopus
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libopus ./test_files/test_opus.opus || true
      #   shell: bash

      # - name: Test libmp3lame
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libmp3lame ./test_files/test_mp3.mp3 || true
      #   shell: bash

      # - name: Test libfdk_aac
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libfdk_aac ./test_files/test_aac.m4a || true
      #   shell: bash

      # - name: Test libvorbis
      #   run: ./ffmpeg -y -f lavfi -i anullsrc=duration=1 -c:a libvorbis ./test_files/test_vorbis.ogg || true
      #   shell: bash
      
      # - name: Test libwebp
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libwebp ./test_files/test.webp || true
      #   shell: bash

      # - name: Test libopenjpeg
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=640x480:rate=1 -frames:v 1 -c:v libopenjpeg ./test_files/test.jp2 || true
      #   shell: bash

      # - name: Test libass
      #   run: ./ffmpeg -y -f lavfi -i testsrc=duration=1:size=1280x720:rate=30 -vf ass=test_files/test.ass ./test_files/test_ass.mp4 || true
      #   shell: bash

      # - name: Test libfribidi
      #   run: ./ffmpeg -filters 2>&1 | grep fribidi || true
      #   shell: bash

      # - name: Test libvmaf
      #   run: ./ffmpeg -h 2>&1 | grep vmaf || true
      #   shell: bash
        
      # - name: Test libbluray
      #   run: ./ffmpeg -h 2>&1 | grep bluray || true
      #   shell: bash
        
      # - name: Test libcdio
      #   run: ./ffmpeg -h 2>&1 | grep cdio || true
      #   shell: bash
        
      # - name: Test libsrt 
      #   run: ./ffmpeg -h 2>&1 | grep srt || true
      #   shell: bash

      # - name: Test libxml2
      #   run: ./ffmpeg -h 2>&1 | grep xml || true
      #   shell: bash

      # - name: Test libdav1d
      #   run: ./ffmpeg -h decoder 2>&1 | grep dav1d || true
      #   shell: bash

      # - name: Test rav1e
      #   run: ./ffmpeg -h encoder 2>&1 | grep rav1e || true
      #   shell: bash
