name: Docker Compose Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker-compose-build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Docker Buildx for multi-architecture builds (optional, but useful)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Set up Docker Compose
    - name: Set up Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose

    # Build and run containers
    - name: Build and Start Docker Compose
      run: docker-compose up --build -d
      
    # Export ffmpeg builds to release
    - name: Export ffmpeg builds
      run: |
        mkdir -p downloads
        docker cp ffmpeg-linux:/output/ffmpeg-linux-7.1.tar.gz downloads/
        docker cp ffmpeg-windows:/output/ffmpeg-windows-7.1.tar.gz downloads/
        docker cp ffmpeg-aarch64:/output/ffmpeg-aarch64-7.1.tar.gz downloads/

    # Upload the tarballs to output
    - name: Upload ffmpeg artifacts for linux
      uses: actions/upload-artifact@v3
      with:
        name: ffmpeg-linux-7.1
        path: downloads/ffmpeg-linux-7.1.tar.gz

    - name: Upload ffmpeg artifacts for windows
      uses: actions/upload-artifact@v3
      with:
        name: ffmpeg-windows-7.1
        path: downloads/ffmpeg-windows-7.1.tar.gz

    - name: Upload ffmpeg artifacts for aarch64
      uses: actions/upload-artifact@v3
      with:
        name: ffmpeg-aarch64-7.1
        path: downloads/ffmpeg-aarch64-7.1.tar.gz

    # Stop and clean up Docker containers
    - name: Clean Up
      run: docker-compose down --volumes
      
  release:
    runs-on: ubuntu-latest
    needs: docker-compose-build

    steps:
    # Download artifacts from the previous job
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: ffmpeg-linux-7.1
        path: downloads/
    - uses: actions/download-artifact@v3
      with:
        name: ffmpeg-windows-7.1
        path: downloads/
    - uses: actions/download-artifact@v3
      with:
        name: ffmpeg-aarch64-7.1
        path: downloads/

    # Create a GitHub release
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    # Upload artifacts to the release
    - name: Upload Linux ffmpeg build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/ffmpeg-linux-7.1.tar.gz
        asset_name: ffmpeg-linux-7.1.tar.gz
        asset_content_type: application/gzip

    - name: Upload Windows ffmpeg build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/ffmpeg-windows-7.1.tar.gz
        asset_name: ffmpeg-windows-7.1.tar.gz
        asset_content_type: application/gzip

    - name: Upload AArch64 ffmpeg build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: downloads/ffmpeg-aarch64-7.1.tar.gz
        asset_name: ffmpeg-aarch64-7.1.tar.gz
        asset_content_type: application/gzip
