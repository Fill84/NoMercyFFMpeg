name: Parallel Docker Builds with Caching

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers for base image
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-buildx-base-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-base-

      - name: Build Base Image
        run: |
          mkdir -p ${{ github.workspace }}/.buildx-cache
          DOCKER_BUILDKIT=1 docker buildx build \
            --push \
            --tag nomercyentertainment/ffmpeg-base:latest \
            -f ffmpeg-base.dockerfile .

  build-linux:
    runs-on: ubuntu-latest
    needs: build-base
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers for Linux image
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.buildx-cache
          key: ${{ runner.os }}-buildx-linux-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-linux-

      - name: Build Linux Image
        run: |
          mkdir -p ${{ github.workspace }}/.buildx-cache
          DOCKER_BUILDKIT=1 docker buildx build \
            --load \
            --tag ffmpeg-linux:latest \
            -f ffmpeg-linux.dockerfile .

      - name: Export Linux Artifact
        run: |
          mkdir -p downloads
          docker create --name linux-container ffmpeg-linux:latest
          docker cp linux-container:/output/ffmpeg-linux-7.1.tar.gz downloads/
          docker rm linux-container

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg-linux-7.1
          path: downloads/ffmpeg-linux-7.1.tar.gz

  build-windows:
    runs-on: ubuntu-latest
    needs: build-base
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers for Windows image
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.buildx-cache
          key: ${{ runner.os }}-buildx-windows-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-windows-

      - name: Build Windows Image
        run: |
          mkdir -p ${{ github.workspace }}/.buildx-cache
          DOCKER_BUILDKIT=1 docker buildx build \
            --load \
            --tag ffmpeg-windows:latest \
            -f ffmpeg-windows.dockerfile .

      - name: Export Windows Artifact
        run: |
          mkdir -p downloads
          docker create --name windows-container ffmpeg-windows:latest
          docker cp windows-container:/output/ffmpeg-windows-7.1.tar.gz downloads/
          docker rm windows-container

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg-windows-7.1
          path: downloads/ffmpeg-windows-7.1.tar.gz

  build-aarch64:
    runs-on: ubuntu-latest
    needs: build-base
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers for AArch64 image
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.buildx-cache
          key: ${{ runner.os }}-buildx-aarch64-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-aarch64-

      - name: Build AArch64 Image
        run: |
          mkdir -p ${{ github.workspace }}/.buildx-cache
          DOCKER_BUILDKIT=1 docker buildx build \
            --load \
            --tag ffmpeg-aarch64:latest \
            -f ffmpeg-aarch64.dockerfile .

      - name: Export AArch64 Artifact
        run: |
          mkdir -p downloads
          docker create --name aarch64-container ffmpeg-aarch64:latest
          docker cp aarch64-container:/output/ffmpeg-aarch64-7.1.tar.gz downloads/
          docker rm aarch64-container

      - name: Upload AArch64 Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg-aarch64-7.1
          path: downloads/ffmpeg-aarch64-7.1.tar.gz